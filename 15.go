package main

import (
	"fmt"
	"strings"
)

// Если переменная в проекте нигде не используется нужно перенести её локально, глобальные переменные не безопасны
// В пакете, предназначенном для повторного использования, следует избегать глобальных переменных, поскольку тогда
// два пользователя этого пакета могут влиять друг на друга.
//
//	всякий раз, когда глобальная переменная изменяется во время выполнения программы, программу становится сложнее понять
var justString string

func someFunc() {

	// Добавляем содержимое в builder
	var builder strings.Builder
	// Добавляем переменную для длинны строки, в дальнейшем не нужно будет искать и менять во всех местах значение
	strLen := 1 << 10
	builder.Grow(strLen) // Устанавливаем начальный размер строки
	//При конкантинация строк через '+' ведёт к постоянному копированию в памяти
	//Лучшим решением будет закинуть все данные для конкантинации в массив и при нужде объединить в строку
	//Для решения этой проблемы лучше использовать string builder
	createHugeString(strLen, &builder)
	//fmt.Println(builder.String())

	// Не билдим всю строку а только первые 100 символов(экономим память)
	justString = builder.String()[:100]
}

func main() {
	someFunc()
	fmt.Println(justString)
}

func createHugeString(size int, builder *strings.Builder) {
	for i := 0; i < size; i++ {
		builder.WriteString("a")
	}
	return
}
